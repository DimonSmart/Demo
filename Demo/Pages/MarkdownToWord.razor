@page "/markdown-to-word"
@using System
@using System.Collections.Generic
@using Microsoft.AspNetCore.Components.WebAssembly.Services
@using Demo.Services
@inject LazyAssemblyLoader AssemblyLoader
@inject PageTitleService PageTitleService

<PageTitle>Markdown to Word</PageTitle>

@if (loadError)
{
    <div class="alert alert-danger" role="alert">
        Unable to load the Markdown tools at this time.
    </div>
}
else if (componentType is null)
{
    <div class="d-flex align-items-center text-secondary">
        <span class="spinner-border spinner-border-sm me-2" role="status"></span>
        Loading Markdown workspace...
    </div>
}
else
{
    <DynamicComponent Type="componentType" Parameters="componentParameters" />
}

@code {
    private Type? componentType;
    private Dictionary<string, object?> componentParameters = new();
    private bool loadError;

    protected override async Task OnInitializedAsync()
    {
        PageTitleService.SetTitle("Markdown to Word");
        try
        {
            var assemblies = await AssemblyLoader.LoadAssembliesAsync(new[] { "MarkdownToWordFeature.dll" });
            var assembly = assemblies.FirstOrDefault();
            componentType = assembly?.GetType("MarkdownToWordFeature.Components.MarkdownToWordDemo");

            if (componentType == null)
            {
                loadError = true;
                return;
            }

            componentParameters = new Dictionary<string, object?>
            {
                ["SetPageTitle"] = (Action<string>)PageTitleService.SetTitle
            };
        }
        catch
        {
            loadError = true;
        }
    }
}
