@page "/stringdiffdemo"
@using Demo.Stringdiffdemo
@using DimonSmart.StringDiff
@using System.Text

<PageTitle>StringDiff Demo</PageTitle>

<h1>StringDiff Demo</h1>

<section>
    <div style="display: flex; gap: 20px;">
        <textarea @bind="TextLeft" placeholder="Enter text here..." style="width: 45%; height: 150px;"></textarea>
        <textarea @bind="TextRight" placeholder="Enter text here..." style="width: 45%; height: 150px;"></textarea>
    </div>

    <div style="margin-top: 20px;">
        <h2>Options</h2>
        <label>
          <input type="checkbox" @bind="BreakOnWords" />
              Break on words
        </label>
        <br />
        <label>
            Minimum diff length: @MinDiffLength
            <input type="range" min="1" max="10" @bind="MinDiffLength"  />
        </label>
    </div>

    <div style="margin-top: 20px;">
        <button @onclick="SetExample1">1: Book Quote</button>
        <button @onclick="SetExample2">2: Poetry</button>
        <button @onclick="SetExample3">3: Numbers</button>
        <button @onclick="SetExample4">4: Program Code</button>
        <button @onclick="SetExample5">5: Cooking Recipe</button>
    </div>

    <div style="margin-top: 20px;">
        <DiffViewBox HeaderText="Text differences" Diff="@StringDiffHighlightedResult" />
    </div>
</section>

@code {
    private string TextLeft { get; set; } = string.Empty;
    private string TextRight { get; set; } = string.Empty;
    private bool _breakOnWords;
    private bool BreakOnWords
    {
        get => _breakOnWords;
        set
        {
            if (_breakOnWords != value)
            {
                _breakOnWords = value;
                CalculateDiff();
            }
        }
    }

    private int _minDiffLength = 1;
    private int MinDiffLength
    {
        get => _minDiffLength;
        set
        {
            if (_minDiffLength != value)
            {
                _minDiffLength = value;
                CalculateDiff();
            }
        }
    }

    private TextDiff? StringDiffHighlightedResult = default;

    private void CalculateDiff()
    {
        var options = new StringDiffOptions(MinDiffLength, BreakOnWords ? DefaultWordBoundaryDetector.Instance : null);
        var stringDiff = new StringDiff(options);
        StringDiffHighlightedResult = stringDiff.ComputeDiff(TextLeft, TextRight);
    }

    private void SetExample1()
    {
        TextLeft = "It was the best of times, it was the worst of times.";
        TextRight = "It was the age of wisdom, it was the age of foolishness.";
        CalculateDiff();
    }

    private void SetExample2()
    {
        TextLeft = "The woods are lovely, dark and deep,\nBut I have promises to keep,\nAnd miles to go before I sleep,\nAnd miles to go before I sleep.";
        TextRight = "The woods are lovely, dark and deep,\nBut I have promises to keep,\nAnd kilometers to go before I sleep,\nAnd kilometers to go before I sleep.";
        CalculateDiff();
    }

    private void SetExample3()
    {
        TextLeft = "2 x 2 = 5\n3 x 3 = 9\n4 x 4 = 16";
        TextRight = "2 x 2 = 4\n3 x 3 = 9\n4 x 4 = 20";
        CalculateDiff();
    }

    private void SetExample4()
    {
        TextLeft = "public void Example()\n{\n    Console.WriteLine(\"hello, world!\");\n}";
        TextRight = "public void Example()\n{\n    Console.WriteLine(\"Hello, universe!\");\n}";
        CalculateDiff();
    }

    private void SetExample5()
    {
        TextLeft = "Ingredients:\n- 1 cup sugar\n- 2 cups flour\n- 1/2 cup butter";
        TextRight = "Ingredients:\n- 1 big cup sugar\n- 3 cups flour\n- 1/2 cup margarine";
        CalculateDiff();
    }
}
