@page "/qr-data-transfer"
@using System.Linq
@using Demo.Services
@using global::QrDataTransfer
@inject PageTitleService PageTitleService
@inject QrDataTransferService TransferService

<PageTitle>QR Data Transfer</PageTitle>

<h1 class="mb-4">Передача данных через QR-коды</h1>

<div class="qr-transfer__grid">
    <section class="qr-transfer__card">
        <h2>Создание кодов</h2>
        <div class="mb-3">
            <label class="form-label">Исходный текст</label>
            <textarea class="form-control" rows="6" @bind="_inputText"></textarea>
        </div>
        <div class="mb-3">
            <label class="form-label">Максимальный размер блока (байт)</label>
            <input class="form-control" type="number" min="128" max="1024" @bind-value="_maxPayload" @bind-value:event="oninput" />
            <div class="form-text">Увеличьте размер блока для коротких текстов или уменьшите при ошибках чтения.</div>
        </div>
        <button class="btn btn-primary" @onclick="GenerateChunks">Создать QR-коды</button>
    </section>

    <section class="qr-transfer__card">
        <h2>Сбор данных</h2>
        <div class="mb-3">
            <label class="form-label">Строки, полученные после сканирования</label>
            <textarea class="form-control" rows="6" @bind="_decodedInput"></textarea>
            <div class="form-text">Каждая строка должна выглядеть как <code>XXXX|1/3:BASE64</code>. Вставляйте их целиком.</div>
        </div>
        <button class="btn btn-secondary" @onclick="RebuildMessage">Собрать сообщение</button>

        @if (!string.IsNullOrEmpty(_reconstructed))
        {
            <div class="alert alert-success mt-3">
                <h3>Результат</h3>
                <pre class="qr-transfer__result">@_reconstructed</pre>
            </div>
        }
    </section>
</div>

@if (!string.IsNullOrEmpty(_errorMessage))
{
    <div class="alert alert-danger mt-4">@_errorMessage</div>
}

@if (_chunks.Count > 0)
{
    <div class="qr-transfer__codes mt-4">
        <p>Просканируйте коды в указанном порядке. Идентификатор передачи должен совпадать для всех кодов.</p>
        <div class="qr-transfer__code-list">
            @foreach (var chunk in _chunks)
            {
                <div class="qr-transfer__code" @key="chunk.Index">
                    <h3>@chunk.Index / @chunk.Total</h3>
                    <div class="qr-transfer__image">
                        <img src="@chunk.ImageDataUrl" alt=$"QR code {chunk.Index} of {chunk.Total}">
                    </div>
                    <code class="qr-transfer__payload">@chunk.EncodedText</code>
                </div>
            }
        </div>
    </div>
}
else
{
    <p class="mt-4 text-muted">Введите текст и нажмите «Создать QR-коды», чтобы сгенерировать набор для передачи.</p>
}

@code {
    private string _inputText = string.Empty;
    private int _maxPayload = QrDataTransferService.DefaultMaxPayloadBytes;
    private readonly List<QrChunk> _chunks = new();
    private string? _errorMessage;
    private string _decodedInput = string.Empty;
    private string? _reconstructed;

    protected override void OnInitialized()
    {
        PageTitleService.SetTitle("QR data transfer");
    }

    private void GenerateChunks()
    {
        _errorMessage = null;
        _reconstructed = null;
        _chunks.Clear();

        try
        {
            var chunks = TransferService.CreateChunks(_inputText, _maxPayload);
            _chunks.AddRange(chunks);
            _decodedInput = string.Join(Environment.NewLine, chunks.Select(chunk => chunk.EncodedText));
        }
        catch (Exception ex)
        {
            _errorMessage = ex.Message;
        }
    }

    private void RebuildMessage()
    {
        _errorMessage = null;
        _reconstructed = null;

        try
        {
            var tokens = _decodedInput
                .Split(new[] { '\r', '\n' }, StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);
            _reconstructed = TransferService.Reassemble(tokens);
        }
        catch (Exception ex)
        {
            _errorMessage = ex.Message;
        }
    }
}
